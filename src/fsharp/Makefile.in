
# Make the proto using the bootstrap, then make the final compiler using the proto
# We call MAKE sequentially because we don't want build-final to explicitly depend on build-proto,
# as that causes a complete recompilation of both proto and final everytime you touch the 
# compiler sources.
all:
	$(MAKE) build-proto
	$(MAKE) build

build-proto:
	$(MAKE) -C FSharp.Build-proto Configuration=proto $@
	$(MAKE) -C FSharp.Compiler-proto Configuration=proto $@
	$(MAKE) -C Fsc-proto Configuration=proto $@

build clean install:
	$(MAKE) -C FSharp.Core TargetFramework=net40 $@
	$(MAKE) -C FSharp.Build $@
	$(MAKE) -C FSharp.Compiler $@
	$(MAKE) -C Fsc $@
	$(MAKE) -C FSharp.Compiler.Interactive.Settings $@
	$(MAKE) -C FSharp.Compiler.Server.Shared $@
	$(MAKE) -C FSharp.Data.TypeProviders $@
	$(MAKE) -C fsi $@
	$(MAKE) -C fsiAnyCpu $@
	$(MAKE) -C policy.2.0.FSharp.Core $@
	$(MAKE) -C policy.4.0.FSharp.Core $@
	$(MAKE) -C policy.2.3.FSharp.Core $@
	$(MAKE) -C policy.3.3.FSharp.Core $@
	$(MAKE) -C policy.4.3.FSharp.Core $@
	$(MAKE) -C policy.2.0.FSharp.Core TargetFramework=net20 $@
	$(MAKE) -C policy.2.3.FSharp.Core TargetFramework=net20 $@
	$(MAKE) -C FSharp.Core TargetFramework=net20 $@
	$(MAKE) -C FSharp.Core TargetFramework=monodroid $@
	$(MAKE) -C FSharp.Core TargetFramework=monotouch $@

# Add these to build portable FSharp.Core on Mac 
# - Requires Mono 3.2.4 or greater
# - Requires $(MSBuildExtensionsPath32)\Microsoft\Portable\v4.0\Microsoft.Portable.Common.targets
# - Requires PCL assemblies

#$(MAKE) -C FSharp.Core TargetFramework=portable-net45+sl5+win8 $@
#$(MAKE) -C FSharp.Core TargetFramework=portable-net4+sl4+wp71+win8 $@




